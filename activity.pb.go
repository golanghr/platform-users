// Code generated by protoc-gen-go.
// source: activity.proto
// DO NOT EDIT!

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	activity.proto
	errors.proto
	picture.proto
	provider.proto
	user.proto

It has these top-level messages:
	Activity
	Picture
	Provider
	User
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Activity_Status int32

const (
	Activity_UNKNOWN Activity_Status = 0
	Activity_ONLINE  Activity_Status = 1
	Activity_OFFLINE Activity_Status = 2
	Activity_IDLE    Activity_Status = 3
)

var Activity_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "ONLINE",
	2: "OFFLINE",
	3: "IDLE",
}
var Activity_Status_value = map[string]int32{
	"UNKNOWN": 0,
	"ONLINE":  1,
	"OFFLINE": 2,
	"IDLE":    3,
}

func (x Activity_Status) String() string {
	return proto.EnumName(Activity_Status_name, int32(x))
}

type Activity struct {
	Id        int64           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	User      *User           `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Provider  *Provider       `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`
	Status    Activity_Status `protobuf:"varint,4,opt,name=status,enum=users.Activity_Status" json:"status,omitempty"`
	Timestamp string          `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Activity) Reset()         { *m = Activity{} }
func (m *Activity) String() string { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()    {}

func (m *Activity) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Activity) GetProvider() *Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func init() {
	proto.RegisterType((*Activity)(nil), "users.Activity")
	proto.RegisterEnum("users.Activity_Status", Activity_Status_name, Activity_Status_value)
}
